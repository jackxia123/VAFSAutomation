<Window x:Name="MainWindow1" x:Class="CANTxGenerator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CANTxGenerator" 
        xmlns:DbcHandling="clr-namespace:DBCHandling"  
        xmlns:e="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:lib="clr-namespace:CustomControls;assembly=CustomControls"
        mc:Ignorable="d"
        Title="RBT_CANTxGenerator_V1.5"  Background="#FFBCB9FB" Height="1543.141" Width="2560.275"  Icon="Icon/Main.png" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True"
       >

    <!--Command Area-->
    <Window.CommandBindings>
        <CommandBinding Command="local:treeViewCommands.Expand" Executed="tvExpand_Executed" CanExecute="tvExpand_CanExecuted"/>
        <CommandBinding Command="local:treeViewCommands.Collapse" Executed="tvCollapse_Executed" CanExecute="tvCollapse_CanExecuted"/>
        <CommandBinding Command="local:treeViewCommands.CopyName" Executed="tvCopyName_Executed" CanExecute="tvCopyName_CanExecuted"/>
    </Window.CommandBindings>
    <!--Resource Area-->
    <Window.Resources>

        <!--Converters-->
        <local:ImageVisibilityConverter x:Key="Connection2OkConverter"></local:ImageVisibilityConverter>
        <local:Connection2ForegroundConverter x:Key="Connection2ForegroundConverter"></local:Connection2ForegroundConverter>
        <local:Collection2StringConverter x:Key="Collection2StringConverter"></local:Collection2StringConverter>
        <local:Bool2StringConverter x:Key="Bool2StringConverter"></local:Bool2StringConverter>
        <local:Bool2ImageConverter x:Key="Bool2ImageConverter"></local:Bool2ImageConverter>
        <local:SignalCodingConverter x:Key="SignalCodingConverter"></local:SignalCodingConverter>
        <local:CombGrpViewConverter x:Key="CombGrpViewConverter"></local:CombGrpViewConverter>
        <local:IsCheckedConverter x:Key="IsCheckedConverter"></local:IsCheckedConverter>
        <local:Select2VisibilityConverter x:Key="Select2VisibilityConverter"></local:Select2VisibilityConverter>

        <!--Styles-->
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Height" Value="15" />
            <Setter Property="SeparatorBrush" Value="DarkRed" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Border BorderBrush="Transparent" BorderThickness="0" Background="{TemplateBinding Background}" Name="PART_Background">
                            <ContentPresenter Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <Setter Property="Border.Background" TargetName="PART_Background" Value="Orange" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="tbStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="Times New Roman" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Margin" Value="15" />
            <Setter Property="Control.Background" Value="#FFBBE03C" />
            <Setter Property="Control.Padding" Value="10" />
            <Style.Triggers>
                <Trigger Property="Control.IsMouseOver" Value="True">
                    <Setter Property="Control.Foreground" Value="DarkRed" />
                    <Setter Property="Control.FontSize" Value="25" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--DataTemplates-->
        <DataTemplate x:Key="MsgPropLayout" DataType="DBCHandling:DbcMessage">
            <WrapPanel>
                <TextBlock Text="{Binding Path=Name, StringFormat=Name: {0:G}}" Style="{Binding Source={StaticResource tbStyle }}"/>
                <TextBlock Text="{Binding Path=ID, StringFormat=ID(Decimal): {0:G}}" Style="{Binding Source={StaticResource tbStyle }}"/>
                <TextBlock Text="{Binding Path=DLC, StringFormat=DLC: {0:G}}" Style="{Binding Source={StaticResource tbStyle }}"/>
                <TextBlock Text="{Binding Path=CycleTime, StringFormat=CycleTime: {0:G}}" Style="{Binding Source={StaticResource tbStyle }}"/>
                <TextBlock Text="{Binding Path=Signals.Count, StringFormat=Signal No.: {0:G}}" Style="{Binding Source={StaticResource tbStyle }}"/>
                <TextBlock Text="{Binding Path=Transmitters[0], StringFormat=Sender: {0:G}}" Style="{Binding Source={StaticResource tbStyle }}"/>
                <TextBlock Text="{Binding Path=Receivers,Converter={StaticResource Collection2StringConverter}, StringFormat=Receiver: {0:G}}" Style="{Binding Source={StaticResource tbStyle }}"/>
            </WrapPanel>
        </DataTemplate>
        <DataTemplate x:Key="SigPropLayout" DataType="DBCHandling:DbcSignal">
            <WrapPanel>
                <TextBlock Text="{Binding Path=Name, StringFormat=Name: {0:G}}" Style="{Binding Source={StaticResource tbStyle }}"/>
                <TextBlock Text="{Binding Path=StartBit, StringFormat=StartBit: {0:G}}" Style="{Binding Source={StaticResource tbStyle }}"/>
                <TextBlock Text="{Binding Path=Length, StringFormat=Length: {0:G}}" Style="{Binding Source={StaticResource tbStyle }}"/>
                <TextBlock Text="{Binding Path=ByteOrder, StringFormat=ByteOrder: {0:G}}" Style="{Binding Source={StaticResource tbStyle }}"/>
                <TextBlock Text="{Binding Path=ValueType, StringFormat=Type: {0:G}}" Style="{Binding Source={StaticResource tbStyle }}"/>
                <TextBlock Text="{Binding Path=Factor, StringFormat=Factor: {0:G}}" Style="{Binding Source={StaticResource tbStyle }}"/>
                <TextBlock Text="{Binding Path=Offset, StringFormat=Offset: {0:G}}" Style="{Binding Source={StaticResource tbStyle }}"/>
                <TextBlock Text="{Binding Path=Unit, StringFormat=Unit: {0:G}}" Style="{Binding Source={StaticResource tbStyle }}"/>
                <TextBlock Text="{Binding Path=InitValue, StringFormat=Init Value: {0:G}}" Style="{Binding Source={StaticResource tbStyle }}"/>
                <TextBlock Text="{Binding Path=Maximum, StringFormat=Maximum: {0:G}}" Style="{Binding Source={StaticResource tbStyle }}"/>
                <TextBlock Text="{Binding Path=Minimum, StringFormat=Minimum: {0:G}}" Style="{Binding Source={StaticResource tbStyle }}"/>
                <TextBlock Text="{Binding Path=Receivers, Converter={StaticResource Collection2StringConverter},StringFormat=Receiver: {0:G}}" Style="{Binding Source={StaticResource tbStyle }}"/>
                <TextBlock Text="{Binding Path=Coding, Converter={StaticResource SignalCodingConverter}, StringFormat=Coding: {0:G}}" Style="{Binding Source={StaticResource tbStyle }}"/>
            </WrapPanel>
        </DataTemplate>

    </Window.Resources>



    <!--Main Grid-->
    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="21"/>
        </Grid.RowDefinitions>

        <!--Configuration Area Grid-->
        <Grid x:Name="grid" Grid.Row="1" Margin="0,0,0,0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"  >
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="200" Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition MinWidth="317"/>
            </Grid.ColumnDefinitions>

            <GridSplitter Background="YellowGreen" Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Width="3" VerticalAlignment="Stretch" HorizontalAlignment="Center" ShowsPreview="False">
            </GridSplitter>

            <!-- Project information and DBC treeview area-->
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition />
                </Grid.RowDefinitions>
                <!-- Project information area-->
                <StackPanel Name="spPrjInfo" Background="Beige" Grid.Row="0">
                    <StackPanel Orientation="Horizontal" >
                        <Label Content="No. Of Variant" Margin="5"/>
                        <TextBox Style="{StaticResource {x:Static ToolBar.TextBoxStyleKey}}" x:Name="tbVariant"  Height="22" Margin="0" Text="{Binding ElementName=MainWindow1, Path= ConfManager.NoOfVariant, Mode=TwoWay, FallbackValue=1}" Width="120"  />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" >
                        <Label x:Name="lbSelectNode" Content="Node:" Margin="5" />
                        <ComboBox  Style="{StaticResource {x:Static ToolBar.ComboBoxStyleKey}}" Margin="5" x:Name="comboNodes" Width="100"   SelectedValue="{Binding ElementName=MainWindow1,Path=ConfManager.SelectedNode, Mode=TwoWay}" ItemsSource="{Binding ElementName=MainWindow1,Path=ConfManager.DbcNodes}" SelectionChanged="comboNodes_SelectionChanged"/>
                        <Image Margin="5" Source="{Binding Icon/Message.png}" Stretch="None" ToolTip="No. Of Message for selected node,configured/All"/>
                        <TextBlock x:Name="NoOfConfiguredMsgs" Margin="5" Style="{x:Null}" Text="{Binding ElementName=MainWindow1,Path=ConfManager.ConfiguredMessages.Count, Mode=OneWay, FallbackValue=0}"/>
                        <TextBlock Margin="5" Style="{x:Null}" Text="/"/>
                        <TextBlock x:Name="NoOfAllMsgs" Margin="5" Style="{x:Null}" Text="{Binding ElementName=MainWindow1,Path=ConfManager.Messages.Count, Mode=OneWay, FallbackValue=0}"/>
                        <Image Margin="5" Source="{Binding Icon/Signal.png}" Stretch="None" ToolTip="No. Of Signal for selected node,configured/All"/>
                        <TextBlock x:Name="NoOfConfiguredMsgSigs" Margin="5" Style="{x:Null}" Text="{Binding ElementName=MainWindow1,Path=ConfManager.ConfiguredSignals.Count, Mode=OneWay, FallbackValue=0}"/>
                        <TextBlock Margin="5" Style="{x:Null}" Text="/"/>
                        <TextBlock x:Name="NoOfAllSigs" Margin="5" Style="{x:Null}" Text="{Binding ElementName=MainWindow1,Path=ConfManager.Signals.Count, Mode=OneWay, FallbackValue=0}"/>
                    </StackPanel>
                </StackPanel>

                <!--DBC treeview area-->

                <!--    <ScrollViewer Background="Aqua" Grid.Column="0" HorizontalAlignment="Stretch" VerticalScrollBarVisibility="Auto" MinWidth="200" HorizontalScrollBarVisibility="Hidden" Margin="0,0,0,0"> -->
                <TreeView  Grid.Row="1"  ToolTip="{Binding ElementName=MainWindow1,Path=ConfManager.ProjectDBC}" x:Name="treeView"  HorizontalAlignment="Stretch" MinWidth="200" BorderBrush="#FF1B67F0" DataContext="{Binding ElementName=MainWindow1,Path=ConfManager.Messages,Mode=TwoWay}">
                    <e:Interaction.Behaviors>
                        <local:BindableSelectedItemBehavior SelectedItem="{Binding ElementName=MainWindow1,Path=ConfManager.SelectedCANTxItem, Mode=TwoWay}" />
                    </e:Interaction.Behaviors>
                    <TreeView.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Expand All" Command="local:treeViewCommands.Expand" >
                                <MenuItem.Icon>
                                    <!--<Image Source="Icon/Expand.png"></Image>-->
                                    <Image Source="Icon/Expand.png"></Image>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Collapse All" Command="local:treeViewCommands.Collapse" >
                                <MenuItem.Icon>
                                    <Image Source="Icon/Collapse.png"></Image>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Copy All" Command="local:treeViewCommands.CopyName">
                                <MenuItem.Icon>
                                    <Image Source="Icon/Expand.png"></Image>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </TreeView.ContextMenu>
                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate ItemsSource="{Binding Path=Signals, Mode=TwoWay}">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="Icon/Message.png" Stretch="None"/>
                                <TextBlock Text="{Binding Path=Name, Mode=TwoWay}" Margin="5,0,5,0" >
                                    <TextBlock.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Copy Name" Command="local:treeViewCommands.CopyName" >
                                                <MenuItem.Icon>
                                                    <Image Source="Icon/Expand.png"></Image>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                        </ContextMenu>
                                    </TextBlock.ContextMenu>
                                    <TextBlock.Foreground>
                                        <MultiBinding Converter="{StaticResource Connection2ForegroundConverter}" NotifyOnSourceUpdated="True">
                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=TreeViewItem}" NotifyOnSourceUpdated="True"/>
                                            <Binding ElementName="MainWindow1" Path="ConfManager.Connections" NotifyOnTargetUpdated="True"/>
                                        </MultiBinding>
                                    </TextBlock.Foreground>
                                </TextBlock>
                                <Image Source="Icon/Ok.png" Stretch="None">
                                    <Image.Visibility>
                                        <MultiBinding Converter="{StaticResource Connection2OkConverter}">
                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=TreeViewItem}"/>
                                            <Binding ElementName="MainWindow1" Path="ConfManager.Connections"/>
                                        </MultiBinding>
                                    </Image.Visibility>
                                </Image>
                                <TextBlock Text=" [" Foreground="Blue" />
                                <TextBlock Text="{Binding Signals.Count}" Foreground="Blue" />
                                <TextBlock Text="]" Foreground="Blue" />

                            </StackPanel>
                            <HierarchicalDataTemplate.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="Icon/Signal.png" Stretch="None"/>
                                        <TextBlock Text="{Binding Path=Name}" Margin="5,0,5,0" >
                                            <TextBlock.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Header="Copy Name" Command="local:treeViewCommands.CopyName" >
                                                        <MenuItem.Icon>
                                                            <Image Source="Icon/Expand.png"></Image>
                                                        </MenuItem.Icon>
                                                    </MenuItem>
                                                </ContextMenu>
                                            </TextBlock.ContextMenu>
                                            <TextBlock.Foreground>
                                                <MultiBinding Converter="{StaticResource Connection2ForegroundConverter}" NotifyOnSourceUpdated="True">
                                                    <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=TreeViewItem}" NotifyOnSourceUpdated="True"/>
                                                    <Binding ElementName="MainWindow1" Path="ConfManager.Connections" NotifyOnTargetUpdated="True"/>
                                                </MultiBinding>
                                            </TextBlock.Foreground>
                                        </TextBlock>

                                        <Image Source="Icon/Connection.png" Stretch="None">
                                            <Image.Visibility>
                                                <MultiBinding Converter="{StaticResource Connection2OkConverter}">
                                                    <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=TreeViewItem}"/>
                                                    <Binding ElementName="MainWindow1" Path="ConfManager.Connections"/>
                                                </MultiBinding>
                                            </Image.Visibility>
                                        </Image>
                                    </StackPanel>
                                </DataTemplate>
                            </HierarchicalDataTemplate.ItemTemplate>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>

            </Grid>


            <!--Configuration Area for BusHW , Network Generic and Signal Based-->
            <Border Grid.Column="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0,0,0,0" Background="Lavender" >
                <Grid x:Name="gridConfig">
                    <Grid.RowDefinitions >
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <GridSplitter Background="YellowGreen" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Height="3" HorizontalAlignment="Stretch" VerticalAlignment="Center" ShowsPreview="False">
                    </GridSplitter>
                    <GridSplitter Background="YellowGreen" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Height="3" HorizontalAlignment="Stretch" VerticalAlignment="Center" ShowsPreview="False">
                    </GridSplitter>

                    <!-- Bus Generic Test configration-->
                    <!--Todo:Check How binding affected by Expander not expanded-->
                    <Expander  Name="expdBusGeneric" IsExpanded="True"  Background="Bisque"  Grid.Row="0"  Margin="5"  Header=" Bus Generic Test Configuration" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"   >
                        <Expander.Content>
                            <lib:FlipPanel x:Name="fpNetworkConfig" BorderBrush="DarkOrange" BorderThickness="2" IsFlipped="False"   CornerRadius="4" Margin="10" >
                                <lib:FlipPanel.FrontContent>
                                    <WrapPanel x:Name="rpControl" >
                                        <Label>Product</Label>
                                        <ComboBox Style="{StaticResource {x:Static ToolBar.ComboBoxStyleKey}}" Name="cbProductType" SelectedValuePath="Content" SelectedValue="{Binding ElementName=MainWindow1,Path=ConfManager.ProductType,Mode=TwoWay}" >
                                            <ComboBoxItem>ABS</ComboBoxItem>
                                            <ComboBoxItem>ESP</ComboBoxItem>
                                            <ComboBoxItem>ABS_Gen93</ComboBoxItem>
                                            <ComboBoxItem>APBMi5064</ComboBoxItem>
                                            <ComboBoxItem>APBMi5065</ComboBoxItem>
                                            <ComboBoxItem>Gen93</ComboBoxItem>
                                        </ComboBox>
                                        <CheckBox x:Name="cbIncBusGenericTC" Content="Include Bus Generic Line Test Case" Margin="5"  IsChecked= "{Binding ElementName=MainWindow1,Converter={StaticResource IsCheckedConverter}, Path=ConfManager.BusGenericConfig.IsIncludeBusGeneric,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  />
                                        <CheckBox x:Name="cbIsFaultCanHShUbatt" IsEnabled="{Binding ElementName=cbIncBusGenericTC,Path=IsChecked}" Content="No Fault when CanH short to Ubatt" Margin="5"  IsChecked= "{Binding ElementName=MainWindow1,Converter={StaticResource IsCheckedConverter}, Path=ConfManager.BusGenericConfig.IsNoFaultCanHUbattSh,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  />
                                        <CheckBox x:Name="cbIsFaultCanLShGnd" IsEnabled="{Binding ElementName=cbIncBusGenericTC,Path=IsChecked}"  Content="No Fault when CanL short to Gnd" Margin="5"  IsChecked= "{Binding ElementName=MainWindow1,Converter={StaticResource IsCheckedConverter}, Path=ConfManager.BusGenericConfig.IsNoFaultCanLGndSh,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  />
                                        <CheckBox x:Name="cbIsFaultErrorPassive" IsEnabled="{Binding ElementName=cbIncBusGenericTC,Path=IsChecked}" Content="No Fault when ErrorPassive" Margin="5" IsChecked= "{Binding ElementName=MainWindow1,Converter={StaticResource IsCheckedConverter},Path=ConfManager.BusGenericConfig.IsNoFaultErrorPassive,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                        <CheckBox x:Name="cbIsFaultBusOffReset" IsEnabled="{Binding ElementName=cbIncBusGenericTC,Path=IsChecked}" Content="No Degrade when BusOff reset" Margin="5" IsChecked= "{Binding ElementName=MainWindow1,Converter={StaticResource IsCheckedConverter},Path=ConfManager.BusGenericConfig.IsNoFaultBusOffReset,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                                        <StackPanel Orientation="Horizontal" IsEnabled="{Binding ElementName=cbIncBusGenericTC,Path=IsChecked}" >
                                            <Label>NetUnderVoltage threshold(v)</Label>
                                            <TextBox Width="50" x:Name="tbNUV" Margin="5" Text= "{Binding ElementName=MainWindow1, Path=ConfManager.BusGenericConfig.ThresholdNUV,Mode=OneWayToSource,UpdateSourceTrigger=PropertyChanged}" />
                                        </StackPanel>

                                        <StackPanel Orientation="Horizontal" IsEnabled="{Binding ElementName=cbIncBusGenericTC,Path=IsChecked}" >
                                            <Label>HydraulictUnderVoltage threshold(v)</Label>
                                            <TextBox Width="50" x:Name="tbHydrUV" Margin="5" ToolTip="Please input the correct voltage, the range is 0v~24v"   Text= "{Binding ElementName=MainWindow1, Path=ConfManager.BusGenericConfig.ThresholdHydrUV,Mode=OneWayToSource,UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}" />
                                        </StackPanel>

                                        <StackPanel Orientation="Horizontal" IsEnabled="{Binding ElementName=cbIncBusGenericTC,Path=IsChecked}" >
                                            <Label>HydraulictHardwareUnderVoltage threshold(v)</Label>
                                            <TextBox Width="50" x:Name="tbHydrHardUV" Margin="5" ToolTip="Please input the correct voltage, the range is 0v~24v"  Text= "{Binding ElementName=MainWindow1, Path=ConfManager.BusGenericConfig.ThresholdHydrHardUV,Mode=OneWayToSource,UpdateSourceTrigger=PropertyChanged}" />

                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" IsEnabled="{Binding ElementName=cbIncBusGenericTC,Path=IsChecked}" >
                                            <Label>NetOverVoltage threshold(v)</Label>
                                            <TextBox Width="50" x:Name="tbOV" Margin="5" ToolTip="Please input the correct voltage, the range is 0v~24v"  Text= "{Binding ElementName=MainWindow1, Path=ConfManager.BusGenericConfig.ThresholdOV,Mode=OneWayToSource,UpdateSourceTrigger=PropertyChanged}" />

                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" IsEnabled="{Binding ElementName=cbIncBusGenericTC,Path=IsChecked}" >
                                            <Label>Monitoring start time after IG On threshold(ms)</Label>
                                            <TextBox Width="50" x:Name="tbTdiag" Margin="5"  Text= "{Binding ElementName=MainWindow1, Path=ConfManager.BusGenericConfig.TdiagstartMs,Mode=OneWayToSource,UpdateSourceTrigger=PropertyChanged}" />

                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" IsEnabled="{Binding ElementName=cbIncBusGenericTC,Path=IsChecked}" >
                                            <Label>DOORS Link</Label>
                                            <TextBox Width="800" x:Name="tbDoosLink" Margin="5"  Text= "{Binding ElementName=MainWindow1, Path=ConfManager.BusGenericConfig.DoorsLink,Mode=OneWayToSource,UpdateSourceTrigger=PropertyChanged}" />

                                        </StackPanel>
                                    </WrapPanel>


                                </lib:FlipPanel.FrontContent>
                                <lib:FlipPanel.BackContent>
                                    <Grid Margin="6">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                            <RowDefinition Height="200"></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <StackPanel Grid.Row="0" Orientation="Horizontal" >
                                            <TextBlock TextWrapping="Wrap" Margin="3" FontSize="16" Foreground="DarkMagenta">Bus Generic Test Case:</TextBlock>
                                            <Button Background="Coral" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" HorizontalAlignment="Right" Name="btnImpBus" Click="btnImpBus_Click">Import2QC</Button>

                                        </StackPanel>

                                        <DataGrid Name="dgBus" RowHeight="50"  CanUserResizeColumns="True" CanUserReorderColumns="True" CanUserResizeRows="True" CanUserSortColumns="True"  SelectionMode="Extended" SelectionUnit="CellOrRowHeader" AutoGenerateColumns="False" LoadingRow="DataGrid_LoadingRow" Grid.Row="1" 
                                              ItemsSource="{Binding ElementName=MainWindow1,Path=ConfManager.BusGenericConfig.BusGenericTScript}" VerticalScrollBarVisibility="Visible">
                                            <DataGrid.Columns>
                                                <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="Name" IsReadOnly="True" MinWidth="100">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <TextBox Text="{Binding Path=TestCaseName }" HorizontalAlignment="Stretch"/>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>
                                                <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="TestDescription" IsReadOnly="True" MinWidth="100">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <TextBox Text="{Binding Path=TestDescription}" HorizontalAlignment="Stretch"/>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>
                                                <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="ExpectedResult" IsReadOnly="True" MinWidth="100">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <TextBox Text="{Binding Path=ExpectedResult}" HorizontalAlignment="Stretch"/>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>
                                                <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="DoorsLink" IsReadOnly="True" MinWidth="100">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <TextBox Text="{Binding Path=DoorsLink}" HorizontalAlignment="Stretch"/>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>
                                                <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="Subject" IsReadOnly="True" MinWidth="100">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <TextBox Text="{Binding Path=QcFolderPath}" HorizontalAlignment="Stretch"/>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>
                                                <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="Script" IsReadOnly="True" MinWidth="100">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <TextBox Text="{Binding Path=TestCaseScript}" HorizontalAlignment="Stretch" TextWrapping="Wrap"/>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>

                                                </DataGridTemplateColumn>

                                            </DataGrid.Columns>

                                        </DataGrid>
                                    </Grid>
                                </lib:FlipPanel.BackContent>
                            </lib:FlipPanel>
                        </Expander.Content>
                    </Expander>




                    <!-- Network Parameter Test configration-->
                    <Expander Name="expdNetworkPar" IsExpanded="True" Grid.Row="2"  Margin="5"  Header=" Network Generic Requirements" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="LightGreen"  >
                        <lib:FlipPanel x:Name="fpSignalConfig" BorderBrush="DarkOrange" BorderThickness="2" IsFlipped="False"   CornerRadius="4" Margin="10" >
                            <lib:FlipPanel.FrontContent>
                                <Grid Margin="6">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <GridSplitter Background="YellowGreen" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Width="3" HorizontalAlignment="Center" VerticalAlignment="Stretch" ShowsPreview="False">
                                    </GridSplitter>
                                    <GridSplitter Background="YellowGreen" Grid.Column="3" Grid.Row="0" Grid.RowSpan="2" Width="3" HorizontalAlignment="Center" VerticalAlignment="Stretch" ShowsPreview="False">
                                    </GridSplitter>

                                    <!--Postrun behavior check-->
                                    <WrapPanel Grid.Column="0">

                                        <StackPanel Margin="5">
                                            <StackPanel Orientation="Vertical">
                                                <TextBlock HorizontalAlignment="Center" FontSize="20" Background="Violet">Postrun</TextBlock>
                                            </StackPanel>
                                            <StackPanel HorizontalAlignment="Stretch" IsEnabled="{Binding ElementName=cbUsedPostrun,Path=IsChecked}">
                                                <StackPanel Orientation="Horizontal" >
                                                    <Label>Postrun Time in Standstill (ms)</Label>
                                                    <TextBox  Width="50" x:Name="tbPstRnStdStl" Margin="5"  Text= "{Binding ElementName=MainWindow1, Path=ConfManager.NetworkParConfig.TPostrunStdStl,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal">
                                                    <Label>Postrun Time(ms)</Label>
                                                    <TextBox  Width="50" x:Name="tbPstRnRunning" Margin="5"  Text= "{Binding ElementName=MainWindow1, Path=ConfManager.NetworkParConfig.TPostrunning,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                                    <Label>when speed above (kph)</Label>
                                                    <TextBox  Width="50" x:Name="tbPstRnRunningSpd" Margin="5"  Text= "{Binding ElementName=MainWindow1, Path=ConfManager.NetworkParConfig.SpdThrPstrKph,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal">
                                                    <Label>Delay time of system downgrade when Postrun (ms)</Label>
                                                    <TextBox  Width="50" x:Name="tbDelayPstrn" Margin="5"  Text= "{Binding ElementName=MainWindow1, Path=ConfManager.NetworkParConfig.DelayPostrun,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                                </StackPanel>

                                                <StackPanel Orientation="Horizontal">

                                                    <StackPanel Orientation="Horizontal" Visibility="{Binding ElementName=MainWindow1,Path=ConfManager.NetworkParConfig.ProductType,Converter={StaticResource Select2VisibilityConverter}}">
                                                        <Label>Lamp signal(ESP)</Label>
                                                        <TextBox  Width="100" x:Name="tbDoorsLampSig" Margin="5"  Text= "{Binding ElementName=MainWindow1, Path=ConfManager.NetworkParConfig.PostrunLamp,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                                        <Label>OnValue</Label>
                                                        <TextBox  Width="35" x:Name="tbDoorsVal" Margin="5"  Text= "{Binding ElementName=MainWindow1, Path=ConfManager.NetworkParConfig.PostrunLampValue,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                                    </StackPanel>
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal">
                                                    <Label>DOORS Link:</Label>
                                                    <TextBox  Width="320" x:Name="tbDoorsLinkPostrun" Margin="5"  Text= "{Binding ElementName=MainWindow1, Path=ConfManager.NetworkParConfig.DoorsLinkPostRun,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                                </StackPanel>
                                            </StackPanel>
                                            <CheckBox FlowDirection="RightToLeft" HorizontalAlignment="Right" Content="select" Width="300" x:Name="cbUsedPostrun" Margin="5"  IsChecked= "{Binding ElementName=MainWindow1, Path=ConfManager.NetworkParConfig.IsSelectPostrun,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                        </StackPanel>

                                    </WrapPanel>

                                    <!--First Frame behavior check-->
                                    <WrapPanel Grid.Column="2" Width="500">
                                        <StackPanel Margin="5">
                                            <StackPanel Orientation="Vertical">
                                                <TextBlock HorizontalAlignment="Center" FontSize="20" Background="Violet">Initialization</TextBlock>
                                            </StackPanel>
                                            <StackPanel HorizontalAlignment="Stretch" IsEnabled="{Binding ElementName=cbUsedTiming,Path=IsChecked}">
                                                <StackPanel Orientation="Horizontal">
                                                    <Label>Time range to transmit first frame(ms) :</Label>
                                                    <TextBox  Width="50" x:Name="tbTaFFLow" Margin="5"  Text= "{Binding ElementName=MainWindow1, Path=ConfManager.NetworkParConfig.TFirstFrameLow,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />

                                                    <Label>-</Label>
                                                    <TextBox  Width="50" x:Name="tbTaFFHigh" Margin="5"  Text= "{Binding ElementName=MainWindow1, Path=ConfManager.NetworkParConfig.TFirstFrameHigh,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                                </StackPanel>

                                                <StackPanel Orientation="Horizontal">
                                                    <Label>Time to lamp init finish(ms)</Label>
                                                    <TextBox  Width="50" x:Name="tbLampInit" Margin="5"  Text= "{Binding ElementName=MainWindow1, Path=ConfManager.NetworkParConfig.TLampInit,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                                    <Label>Tolerance(ms)</Label>
                                                    <TextBox  Width="50" x:Name="tbLampInitTorlerance" Margin="5"  Text= "{Binding ElementName=MainWindow1, Path=ConfManager.NetworkParConfig.TLampInitTolerance,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                                </StackPanel>

                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">

                                                    <Button Background="Orange" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Click="Button_Click">Add lamp manually</Button>

                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">

                                                    <ListBox ToolTip="Double click to add lamp" Name="lbTxSigs" Margin="0" Height="100" ItemsSource="{Binding ElementName=MainWindow1,Path=ConfManager.Signals}">
                                                        <ListBox.ItemTemplate>
                                                            <DataTemplate>
                                                                <TextBlock Text="{Binding Name}" Width="200" 
                                                                            MouseDown="lbTxSigs_MouseDoubleClick"/>
                                                            </DataTemplate>
                                                        </ListBox.ItemTemplate>
                                                    </ListBox>

                                                    <Label>=></Label>
                                                    <DataGrid ToolTip="Select row header and press del to delete" AllowDrop="True"  Height="100" RowHeaderWidth="10" CanUserAddRows="True" CanUserDeleteRows="True" AutoGenerateColumns="False" Name="dgInitLamp" ItemsSource="{Binding ElementName=MainWindow1,Path=ConfManager.NetworkParConfig.InitLamps,Mode=TwoWay}">
                                                        <DataGrid.Columns>
                                                            <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="Name" IsReadOnly="False" MinWidth="100">
                                                                <DataGridTemplateColumn.CellTemplate>
                                                                    <DataTemplate>
                                                                        <TextBox Text="{Binding Path=Name,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch"/>
                                                                    </DataTemplate>
                                                                </DataGridTemplateColumn.CellTemplate>
                                                            </DataGridTemplateColumn>
                                                            <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="Off Value" IsReadOnly="False" MinWidth="100">
                                                                <DataGridTemplateColumn.CellTemplate>
                                                                    <DataTemplate>
                                                                        <TextBox Text="{Binding Path=Value, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch"/>
                                                                    </DataTemplate>
                                                                </DataGridTemplateColumn.CellTemplate>
                                                            </DataGridTemplateColumn>
                                                        </DataGrid.Columns>
                                                    </DataGrid>

                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal">
                                                    <Label >Signal init value check</Label>
                                                    <Button HorizontalAlignment="Center" Background="Orange" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Name="btnAddInit" Click="btnAddInit_Click">Add all signals</Button>

                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">



                                                    <ListBox ToolTip="Double click to add signal" Name="lbTxSigs2" Margin="5" Height="100" ItemsSource="{Binding ElementName=MainWindow1,Path=ConfManager.Signals}" KeyDown="lbTxSigs2_KeyDown">
                                                        <ListBox.ItemTemplate>
                                                            <DataTemplate>
                                                                <TextBlock Text="{Binding Name}" Width="200"
                                                                            MouseDown="TextBlock_MouseDown"/>
                                                            </DataTemplate>
                                                        </ListBox.ItemTemplate>
                                                    </ListBox>

                                                    <Label>=></Label>
                                                    <DataGrid HorizontalAlignment="Center" ToolTip="Select row header and press del to delete" AllowDrop="True"  Height="100" RowHeaderWidth="10" CanUserAddRows="True" CanUserDeleteRows="True" AutoGenerateColumns="False" Name="dgInitSigs" ItemsSource="{Binding ElementName=MainWindow1,Path=ConfManager.NetworkParConfig.InitSignals,Mode=TwoWay}">
                                                        <DataGrid.Columns>
                                                            <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="Name" IsReadOnly="False" MinWidth="100">
                                                                <DataGridTemplateColumn.CellTemplate>
                                                                    <DataTemplate>
                                                                        <TextBox Text="{Binding Path=Name,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch"/>
                                                                    </DataTemplate>
                                                                </DataGridTemplateColumn.CellTemplate>
                                                            </DataGridTemplateColumn>
                                                            <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="Init Value" IsReadOnly="False" MinWidth="100">
                                                                <DataGridTemplateColumn.CellTemplate>
                                                                    <DataTemplate>
                                                                        <TextBox Text="{Binding Path=Value, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch"/>
                                                                    </DataTemplate>
                                                                </DataGridTemplateColumn.CellTemplate>
                                                            </DataGridTemplateColumn>
                                                        </DataGrid.Columns>
                                                    </DataGrid>
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                                                    <Label>DOORS Link:</Label>
                                                    <TextBox  Width="280" x:Name="tbDoorsLinkTiming" Margin="5"  Text= "{Binding ElementName=MainWindow1, Path=ConfManager.NetworkParConfig.DoorsLinkTxTiming,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                                </StackPanel>
                                            </StackPanel>
                                            <CheckBox FlowDirection="RightToLeft" HorizontalAlignment="Right" Content="select" Width="300" x:Name="cbUsedTiming" Margin="5"  IsChecked= "{Binding ElementName=MainWindow1, Path=ConfManager.NetworkParConfig.IsSelectTxTiming,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />

                                        </StackPanel>
                                    </WrapPanel>

                                    <!--Voltage behavior check-->
                                    <WrapPanel Grid.Column="4">
                                        <StackPanel Margin="5">
                                            <StackPanel Orientation="Vertical">
                                                <TextBlock HorizontalAlignment="Center" FontSize="20" Background="Violet">Voltage threshold</TextBlock>
                                            </StackPanel>
                                            <StackPanel HorizontalAlignment="Stretch" IsEnabled="{Binding ElementName=cbUsedVolt,Path=IsChecked}">
                                                <StackPanel Orientation="Horizontal">
                                                    <Label>NetUnderVoltage threshold(v)</Label>
                                                    <TextBox  Width="50" x:Name="tbNUV2" Margin="5"  ToolTip="Please input the correct voltage, the range is 0v~24v" Text= "{Binding ElementName=MainWindow1, Path=ConfManager.NetworkParConfig.ThresholdNUV,Mode=OneWayToSource,UpdateSourceTrigger=PropertyChanged}" />
                                                </StackPanel>

                                                <StackPanel Orientation="Horizontal">
                                                    <Label>NetOverVoltage threshold(v)</Label>
                                                    <TextBox Width="50" x:Name="tbOV2" Margin="5" ToolTip="Please input the correct voltage, the range is 0v~24v"   Text= "{Binding ElementName=MainWindow1, Path=ConfManager.NetworkParConfig.ThresholdOV,Mode=OneWayToSource,UpdateSourceTrigger=PropertyChanged}" />
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal">
                                                    <Label>NetUnderVoltage reset threshold(v)</Label>
                                                    <TextBox  Width="50" x:Name="tbNUVReset" Margin="5" ToolTip="Please input the correct voltage, the range is 0v~24v"  Text= "{Binding ElementName=MainWindow1, Path=ConfManager.NetworkParConfig.ThresholdNUVReset,Mode=OneWayToSource,UpdateSourceTrigger=PropertyChanged}" />
                                                </StackPanel>

                                                <StackPanel Orientation="Horizontal">
                                                    <Label>NetOverVoltage reset threshold(v)</Label>
                                                    <TextBox Width="50" x:Name="tbOVReset" Margin="5" ToolTip="Please input the correct voltage, the range is 0v~24v"   Text= "{Binding ElementName=MainWindow1, Path=ConfManager.NetworkParConfig.ThresholdOVReset,Mode=OneWayToSource,UpdateSourceTrigger=PropertyChanged}" />
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal">
                                                    <Label>Voltage threshold tolerance(v)</Label>
                                                    <TextBox Width="50" x:Name="tbVoltTor" Margin="5"  Text= "{Binding ElementName=MainWindow1, Path=ConfManager.NetworkParConfig.VoltTolerance,Mode=OneWayToSource,UpdateSourceTrigger=PropertyChanged}" />
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal">
                                                    <Label>UnderVoltage speed tolerance (kph)</Label>
                                                    <TextBox Width="50" x:Name="tbSpdTor" Margin="5"  Text= "{Binding ElementName=MainWindow1, Path=ConfManager.NetworkParConfig.NuvSpdLimitKph,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                                                    <Label>DOORS Link:</Label>
                                                    <TextBox  Width="200" x:Name="tbDoorsLinkVolt" Margin="5"  Text= "{Binding ElementName=MainWindow1, Path=ConfManager.NetworkParConfig.DoorsLinkVoltage,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                                </StackPanel>
                                            </StackPanel>
                                            <CheckBox FlowDirection="RightToLeft" HorizontalAlignment="Right" Content="select" Width="300" x:Name="cbUsedVolt" Margin="5"  IsChecked= "{Binding ElementName=MainWindow1, Path=ConfManager.NetworkParConfig.IsSelectVolt,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />

                                        </StackPanel>
                                    </WrapPanel>
                                </Grid>
                            </lib:FlipPanel.FrontContent>
                            <lib:FlipPanel.BackContent>
                                <Grid Margin="6">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="400"></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Grid.Row="0" TextWrapping="Wrap" Margin="3" FontSize="16" Foreground="DarkMagenta">Network Parameter Test Cases</TextBlock>
                                        <Button Background="Coral" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" HorizontalAlignment="Right" Name="btnImpNetwork" Click="btnImpNetwork_Click">Import2QC</Button>
                                    </StackPanel>
                                    <DataGrid RowHeight="50" CanUserResizeColumns="True" CanUserReorderColumns="True" CanUserResizeRows="True" CanUserSortColumns="True"  SelectionMode="Extended" SelectionUnit="CellOrRowHeader" AutoGenerateColumns="False" LoadingRow="DataGrid_LoadingRow" Grid.Row="1" 
                                              ItemsSource="{Binding ElementName=MainWindow1,Path=ConfManager.NetworkParConfig.NetworkParTScript}" VerticalScrollBarVisibility="Visible">
                                        <DataGrid.Columns>
                                            <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="Name" IsReadOnly="True" MinWidth="100">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBox Text="{Binding Path=TestCaseName }" HorizontalAlignment="Stretch"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="TestDescription" IsReadOnly="True" MinWidth="100">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBox Text="{Binding Path=TestDescription}" HorizontalAlignment="Stretch"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="ExpectedResult" IsReadOnly="True" MinWidth="100">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBox Text="{Binding Path=ExpectedResult}" HorizontalAlignment="Stretch"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="DoorsLink" IsReadOnly="True" MinWidth="100">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBox Text="{Binding Path=DoorsLink}" HorizontalAlignment="Stretch"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="Subject" IsReadOnly="True" MinWidth="100">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBox Text="{Binding Path=QcFolderPath}" HorizontalAlignment="Stretch"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="Script" IsReadOnly="True" MinWidth="100">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBox Text="{Binding Path=TestCaseScript}" HorizontalAlignment="Stretch" TextWrapping="Wrap"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>

                                            </DataGridTemplateColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </Grid>
                            </lib:FlipPanel.BackContent>
                        </lib:FlipPanel>
                    </Expander>

                    <!--Signal Based Configuration-->
                    <Expander Name="expdSigConf" IsExpanded="True" Background="Lavender" Grid.Row="4"  Margin="5"  Header=" Signal Based Test Selection" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"   >
                        <!--Front Panel-->
                        <lib:FlipPanel x:Name="FliPanel" BorderBrush="DarkOrange" BorderThickness="2" IsFlipped="False"   CornerRadius="4" Margin="10" >
                            <lib:FlipPanel.FrontContent>
                                <ScrollViewer>
                                    <StackPanel VerticalAlignment="Stretch">
                                        <Border BorderThickness="1" BorderBrush="LightSeaGreen" Margin="5">
                                            <ContentPresenter x:Name="rpProperty"  Content="{Binding ElementName=treeView,Path=SelectedItem}">

                                                <ContentPresenter.ContentTemplateSelector>
                                                    <local:CANItemTemplateSelector MessageTemplate="{StaticResource MsgPropLayout}"
                                                                    SignalTemplate="{StaticResource SigPropLayout}">
                                                    </local:CANItemTemplateSelector>
                                                </ContentPresenter.ContentTemplateSelector>
                                            </ContentPresenter>
                                        </Border>
                                        <StackPanel x:Name="rpCategory"   VerticalAlignment="Stretch" >
                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                                                <Label x:Name="labType" Content="ItemType:"/>
                                                <ComboBox Style="{StaticResource {x:Static ToolBar.ComboBoxStyleKey}}" x:Name="comboConnect" MinWidth="150" Margin="10,0,10,0" HorizontalAlignment="Left" ItemsSource="{Binding ElementName=MainWindow1,Path=ConfManager.SigTypes,Converter={StaticResource CombGrpViewConverter}}">
                                                    <ComboBox.GroupStyle>
                                                        <GroupStyle>
                                                            <GroupStyle.HeaderTemplate>
                                                                <DataTemplate>
                                                                    <TextBlock Text="{Binding Name}"/>
                                                                </DataTemplate>
                                                            </GroupStyle.HeaderTemplate>
                                                            <GroupStyle.ContainerStyle>
                                                                <Style TargetType="{x:Type GroupItem}">
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate>
                                                                                <Expander Header="{Binding Name}" IsExpanded="False">
                                                                                    <ItemsPresenter />
                                                                                </Expander>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </GroupStyle.ContainerStyle>
                                                        </GroupStyle>
                                                    </ComboBox.GroupStyle>
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding Path=Name}" Cursor="Hand" ToolTip="{Binding Path=Description}"/>
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>

                                                </ComboBox>
                                                <Label x:Name="labOpState" Content="OperationState:"/>
                                                <ComboBox Style="{StaticResource {x:Static ToolBar.ComboBoxStyleKey}}" x:Name="comboOpState" MinWidth="150" Margin="10,0,10,0" HorizontalAlignment="Center" ItemsSource="{Binding ElementName=MainWindow1,Path=ConfManager.OpStates,Converter={StaticResource CombGrpViewConverter}}">
                                                    <ComboBox.GroupStyle>
                                                        <GroupStyle>
                                                            <GroupStyle.HeaderTemplate>
                                                                <DataTemplate>
                                                                    <TextBlock Text="{Binding Name}"/>
                                                                </DataTemplate>
                                                            </GroupStyle.HeaderTemplate>
                                                            <GroupStyle.ContainerStyle>
                                                                <Style TargetType="{x:Type GroupItem}">
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate>
                                                                                <Expander Header="{Binding Name}" IsExpanded="False">
                                                                                    <ItemsPresenter />
                                                                                </Expander>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </GroupStyle.ContainerStyle>
                                                        </GroupStyle>
                                                    </ComboBox.GroupStyle>
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding Path=Name}" Cursor="Hand" ToolTip="{Binding Path=Description}"/>
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>

                                                </ComboBox>
                                                <Label x:Name="labVar" Content="Variant:"/>
                                                <ComboBox Style="{StaticResource {x:Static ToolBar.ComboBoxStyleKey}}" x:Name="comboVar" MinWidth="100" Margin="10,0,10,0" HorizontalAlignment="Right"  DisplayMemberPath="RbVariant" ItemsSource="{Binding ElementName=MainWindow1,Path=ConfManager.Variants}" >

                                                </ComboBox>

                                                <Image Margin="20,5,5,5" Source="Icon/Connection.png" Stretch="None" ToolTip="Connections for current message or signal/All"/>
                                                <TextBlock x:Name="NoOfItemConnections" Margin="5" Style="{x:Null}" Text="{Binding ElementName=MainWindow1,Path=ConfManager.ItemConnections.Count, Mode=OneWay, FallbackValue=0}"/>
                                                <TextBlock Margin="5" Style="{x:Null}" Text="/"/>
                                                <TextBlock x:Name="NoOfAllConnections" Margin="5" Style="{x:Null}" Text="{Binding ElementName=MainWindow1,Path=ConfManager.Connections.Count, Mode=OneWay, FallbackValue=0}"/>

                                                <Image Margin="10,5,5,5" Source="Icon/SigType.png" Stretch="None" ToolTip="CANTx Messag/Signal type configured/All"/>
                                                <TextBlock x:Name="NoOfConfiguredTypes" Margin="5" Style="{x:Null}" Text="{Binding ElementName=MainWindow1,Path=ConfManager.ConfiguredSigTypes.Count, Mode=OneWay, FallbackValue=0}"/>
                                                <TextBlock Margin="5" Style="{x:Null}" Text="/"/>
                                                <TextBlock x:Name="NoOfAllTypes" Margin="5" Style="{x:Null}" Text="{Binding ElementName=MainWindow1,Path=ConfManager.SigTypes.Count, Mode=OneWay, FallbackValue=0}"/>

                                                <Image Margin="10,5,5,5" Source="Icon/OpState.png" Stretch="None" ToolTip="Operation States configured/All"/>
                                                <TextBlock x:Name="NoOfConfiguredOps" Margin="5" Style="{x:Null}" Text="{Binding ElementName=MainWindow1,Path=ConfManager.ConfiguredOpStates.Count, Mode=OneWay, FallbackValue=0}"/>
                                                <TextBlock Margin="5" Style="{x:Null}" Text="/"/>
                                                <TextBlock x:Name="NoOfAllOps" Margin="5" Style="{x:Null}" Text="{Binding ElementName=MainWindow1,Path=ConfManager.OpStates.Count, Mode=OneWay, FallbackValue=0}"/>

                                                <Image Margin="10,5,5,5" Source="Icon/Variant.png" Stretch="None" ToolTip="Variant configured/All"/>
                                                <TextBlock x:Name="NoOfConfiguredVars" Margin="5" Style="{x:Null}" Text="{Binding ElementName=MainWindow1,Path=ConfManager.ConfiguredVars.Count, Mode=OneWay, FallbackValue=0}"/>
                                                <TextBlock Margin="5" Style="{x:Null}" Text="/"/>
                                                <TextBlock x:Name="NoOfAllVars" Margin="5" Style="{x:Null}" Text="{Binding ElementName=MainWindow1,Path=ConfManager.Variants.Count, Mode=OneWay, FallbackValue=0}"/>

                                            </StackPanel>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition></ColumnDefinition>
                                                    <ColumnDefinition></ColumnDefinition>
                                                </Grid.ColumnDefinitions>

                                                <Button Grid.Column="1" Height="50"  HorizontalContentAlignment="Center" HorizontalAlignment="Stretch" x:Name="btnAddConnection" Content="Add Signal connection"  Click="btnAddConnection_Click">

                                                    <Button.Template>
                                                        <ControlTemplate>
                                                            <Border BorderBrush="Transparent" BorderThickness="0" Background="LightCoral" Name="PART_Background" HorizontalAlignment="{TemplateBinding FrameworkElement.HorizontalAlignment}">
                                                                <ContentPresenter Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Center"  VerticalAlignment="Center" />
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                                    <Setter Property="Border.Background" TargetName="PART_Background" Value="#FFe923a5" />
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Button.Template>

                                                </Button>

                                                <Button Grid.Column="0" x:Name="btnAddDefaultConnection" Height="50" Content="Add proposed connections"  HorizontalContentAlignment="Center" HorizontalAlignment="Stretch" Click="btnAddDefaultConnection_Click">
                                                    <Button.Template>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Border BorderBrush="Transparent" BorderThickness="0" Background="Orange" Name="PART_Background" HorizontalAlignment="Stretch">
                                                                <ContentPresenter Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                                    <Setter Property="Border.Background" TargetName="PART_Background" Value="#FFe923a5" />
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Button.Template>
                                                </Button>
                                            </Grid>

                                            <!--Connection configuration area-->
                                            <StackPanel VerticalAlignment="Stretch">
                                                <Label x:Name="labConnection" Content="Connections :"/>
                                                <DataGrid LoadingRow="dgConnection_LoadingRow" SelectionUnit="FullRow"  x:Name="dgConnection" Margin="0,0,0,20" VerticalAlignment="Stretch" ItemsSource="{Binding ElementName=MainWindow1,Path=ConfManager.ItemConnections,Mode=TwoWay}" AutoGenerateColumns='False' SelectionMode='Single' >
                                                    <DataGrid.Columns>
                                                        <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="ItemType" IsReadOnly="True" MinWidth="100">
                                                            <DataGridTemplateColumn.CellTemplate>
                                                                <DataTemplate>
                                                                    <TextBlock Text="{Binding Path=TargetSignalType.Name}" HorizontalAlignment="Left"/>
                                                                </DataTemplate>
                                                            </DataGridTemplateColumn.CellTemplate>
                                                        </DataGridTemplateColumn>
                                                        <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="OperationStates" IsReadOnly="True"  MinWidth="100">
                                                            <DataGridTemplateColumn.CellTemplate>
                                                                <DataTemplate>
                                                                    <TextBlock Text="{Binding Path=ConnectedOpState.Name}" HorizontalAlignment="Left"/>
                                                                </DataTemplate>
                                                            </DataGridTemplateColumn.CellTemplate>
                                                        </DataGridTemplateColumn>
                                                        <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="Variant" IsReadOnly="True"  MinWidth="100">
                                                            <DataGridTemplateColumn.CellTemplate>
                                                                <DataTemplate>
                                                                    <TextBlock Text="{Binding Path=Variant}" HorizontalAlignment="Left"/>
                                                                </DataTemplate>
                                                            </DataGridTemplateColumn.CellTemplate>
                                                        </DataGridTemplateColumn>
                                                        <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="Comment"  MinWidth="200">
                                                            <DataGridTemplateColumn.CellTemplate>
                                                                <DataTemplate>
                                                                    <TextBox Text="{Binding Path=Comment,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" HorizontalAlignment="Stretch"/>
                                                                </DataTemplate>
                                                            </DataGridTemplateColumn.CellTemplate>
                                                        </DataGridTemplateColumn>
                                                        <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="Operation">
                                                            <DataGridTemplateColumn.CellTemplate>
                                                                <DataTemplate>
                                                                    <Button Background="LightBlue" Content="Remove" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" HorizontalAlignment="Stretch" Click="RemoveButton_Click"/>
                                                                </DataTemplate>
                                                            </DataGridTemplateColumn.CellTemplate>
                                                        </DataGridTemplateColumn>
                                                        <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="Status">
                                                            <DataGridTemplateColumn.CellTemplate>
                                                                <DataTemplate>
                                                                    <Image Source="{Binding Path=Parameterized, Converter={StaticResource Bool2ImageConverter}}" x:Name="ConSts" />
                                                                </DataTemplate>
                                                            </DataGridTemplateColumn.CellTemplate>
                                                        </DataGridTemplateColumn>
                                                    </DataGrid.Columns>
                                                </DataGrid>
                                            </StackPanel>

                                            <!--Parameter configuration area-->
                                            <StackPanel VerticalAlignment="Stretch">
                                                <Label x:Name="labPar" Content="Configurations :"/>
                                                <DataGrid x:Name="dgConfiguration" AutoGenerateColumns="False" SelectionUnit="CellOrRowHeader" VerticalAlignment="Stretch" ItemsSource="{Binding ElementName=dgConnection,Path=SelectedItem.Parameters,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" >
                                                    <DataGrid.Columns>
                                                        <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="Name" MinWidth="100">
                                                            <DataGridTemplateColumn.CellTemplate>
                                                                <DataTemplate>
                                                                    <TextBox Text="{Binding Path=Name, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" HorizontalAlignment="Stretch"/>
                                                                </DataTemplate>
                                                            </DataGridTemplateColumn.CellTemplate>
                                                        </DataGridTemplateColumn>
                                                        <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="Value"  MinWidth="100">
                                                            <DataGridTemplateColumn.CellTemplate>
                                                                <DataTemplate>
                                                                    <TextBox Text="{Binding Path=Value, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" HorizontalAlignment="Stretch"/>
                                                                </DataTemplate>
                                                            </DataGridTemplateColumn.CellTemplate>
                                                        </DataGridTemplateColumn>
                                                        <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="Description" IsReadOnly="True" MinWidth="100">
                                                            <DataGridTemplateColumn.CellTemplate>
                                                                <DataTemplate>
                                                                    <TextBlock Text="{Binding Path=Description}" HorizontalAlignment="Left"/>
                                                                </DataTemplate>
                                                            </DataGridTemplateColumn.CellTemplate>
                                                        </DataGridTemplateColumn>
                                                    </DataGrid.Columns>
                                                </DataGrid>
                                                <!--Opstate configuration area-->
                                                <StackPanel VerticalAlignment="Stretch">
                                                    <Label>To add other signal check during this operation state</Label>
                                                    <StackPanel Orientation="Horizontal">
                                                        <ListBox Height="250" MinWidth="200" HorizontalAlignment="Stretch" ToolTip="Double click to add signal" Name="lbSigs" MouseLeftButtonUp="lbSigs_MouseDoubleClick" Margin="5"  DisplayMemberPath="Name" ItemsSource="{Binding ElementName=MainWindow1,Path=ConfManager.Signals}" SelectionMode="Extended" ></ListBox>

                                                        <Label VerticalAlignment="Center">=></Label>
                                                        <DataGrid Height="250" MinWidth="200" HorizontalAlignment="Stretch" ToolTip="Select row header and press del to delete" AllowDrop="True"  RowHeaderWidth="10"  AutoGenerateColumns="False" Name="dgOpStateConf" ItemsSource="{Binding ElementName=dgConnection,Path=SelectedItem.ConnectedOpState.OperationStateSignals,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                                            <DataGrid.Columns>
                                                                <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="Name" IsReadOnly="False" MinWidth="100">
                                                                    <DataGridTemplateColumn.CellTemplate>
                                                                        <DataTemplate>
                                                                            <TextBox Text="{Binding Path=Name,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch"/>
                                                                        </DataTemplate>
                                                                    </DataGridTemplateColumn.CellTemplate>
                                                                </DataGridTemplateColumn>
                                                                <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="Value String" IsReadOnly="False" Width="200" >
                                                                    <DataGridTemplateColumn.CellTemplate>
                                                                        <DataTemplate>
                                                                            <TextBox Text="{Binding Path=Value, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch">
                                                                                <TextBox.ToolTip>
                                                                                    <TextBlock>Refer to the value string definition</TextBlock>
                                                                                </TextBox.ToolTip>
                                                                            </TextBox>
                                                                        </DataTemplate>
                                                                    </DataGridTemplateColumn.CellTemplate>
                                                                </DataGridTemplateColumn>
                                                                <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="Operation">
                                                                    <DataGridTemplateColumn.CellTemplate>
                                                                        <DataTemplate>
                                                                            <Button Background="LightBlue" Content="Remove" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" HorizontalAlignment="Stretch" Click="Button_Click_2"/>
                                                                        </DataTemplate>
                                                                    </DataGridTemplateColumn.CellTemplate>
                                                                </DataGridTemplateColumn>

                                                            </DataGrid.Columns>
                                                        </DataGrid>
                                                        <Viewbox>
                                                            <StackPanel>
                                                                <TextBlock  Padding="10" Margin="10" >
->	 Expected value is given with relative tolerance <LineBreak/>
         200%10    =>      (200 - 200*10% )&lt;X &lt; (200 + 200*10%)  <LineBreak/>
                                                        
->	Expected value is given with absolute tolerance <LineBreak/>
        200?10     =>      (200 -10) &lt; X &lt; (200 + 10)<LineBreak/>
                                                        
->	Expected value lies in a given range<LineBreak/>
        80:X:100   =>      80 &lt; X &lt;100<LineBreak/>
                                                        
->	Expected pattern is given<LineBreak/>
        80 -> 100 -> 120<LineBreak/>
                                                        
->	Absolute expected value is given<LineBreak/>
                                                        
->	How to use negative value for signed signal<LineBreak/>
# Only raw hex value is supported in CAN batch.<LineBreak/>
        Signed decimal value: -20 (length: 1 byte)<LineBreak/>
        Raw hex value: 236<LineBreak/>
        236?10               226 &lt;X &lt; 246  (signed decimal value -30 &lt; X &lt; -10)<LineBreak/>
        226:X:246          226 &lt; X &lt; 246  (signed decimal value -30 &lt; X &lt; -10) <LineBreak/>
                                                                </TextBlock>
                                                            </StackPanel>
                                                        </Viewbox>
                                                    </StackPanel>

                                                </StackPanel>
                                                <TextBlock Padding="10" Name="tbScript" Text="{Binding ElementName=dgConnection,Path=SelectedItem.TestScript.TestCaseScript,UpdateSourceTrigger=PropertyChanged}"/>
                                            </StackPanel>

                                        </StackPanel>
                                    </StackPanel>
                                </ScrollViewer>
                            </lib:FlipPanel.FrontContent>
                            <!--Back Panel-->
                            <lib:FlipPanel.BackContent>
                                <Grid Margin="6">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Grid.Row="0" TextWrapping="Wrap" Margin="3" FontSize="16" Foreground="DarkMagenta">Connection Based Test Cases</TextBlock>
                                        <Button Background="Coral" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" HorizontalAlignment="Right" Name="btnImpConnection" Click="btnImpConnection_Click">Import2QC</Button>
                                    </StackPanel>
                                    <DataGrid AutoGenerateColumns="False" LoadingRow="DataGrid_LoadingRow" Grid.Row="1" ItemsSource="{Binding ElementName=MainWindow1,Path=ConfManager.Connections}" VerticalScrollBarVisibility="Visible">
                                        <DataGrid.Columns>
                                            <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="Name" IsReadOnly="True" MinWidth="100">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding Path=TestScript.Name}" HorizontalAlignment="Left"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="Script" IsReadOnly="True" MinWidth="100">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding Path=TestScript.TestCaseScript}" HorizontalAlignment="Left"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="Comment" IsReadOnly="True" MinWidth="100">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding Path=Comment}" HorizontalAlignment="Left"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="DOORSLink" IsReadOnly="True" MinWidth="100">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="" HorizontalAlignment="Left"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>

                                </Grid>
                            </lib:FlipPanel.BackContent>
                        </lib:FlipPanel>
                    </Expander>

                </Grid>
            </Border>
        </Grid>



        <!--Status bar area-->
        <Border HorizontalAlignment="Stretch" Height="21" Margin="0,0,0,0" VerticalAlignment="Bottom" MinWidth="517"  Grid.Row="2" >
            <StatusBar x:Name="statusBar" BorderThickness="1" FontSize="9.333"/>
        </Border>
        <ToolBarTray HorizontalAlignment="Stretch" Height="40" VerticalAlignment="Top" MinWidth="517" Grid.Row="0" Margin="0,2,0,2">
            <ToolBar Band="1" x:Name="toolBarDBC" HorizontalAlignment="Left" VerticalAlignment="Top" Height="40"  >
                <Button Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" x:Name="btnDBC" ToolTip="select DBC file to open"  HorizontalAlignment="Left" VerticalAlignment="Top" Click="buttonOpenDBC_Click" Height="32" Margin="0,0,0,0">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <Image Stretch="Fill" Source="Icon/openDBC.jpg" Margin="0,0,0,5" />
                            <Label>Load DBC</Label>
                        </StackPanel>
                    </Button.Content>
                </Button>
                <Button x:Name="btnSaveDBC" ToolTip="Save DBC file with added not used signals"  HorizontalAlignment="Left" VerticalAlignment="Top"  Click="btnSaveDBC_Click"  Height="32" Margin="0,0,0,0">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <Image Stretch="Fill" Source="Icon/saveDBC.png" Margin="0,0,0,5" />
                            <Label>Save DBC</Label>
                        </StackPanel>
                    </Button.Content>
                </Button>
                <Button x:Name="btnCompareDBC" ToolTip="Compare new DBC with loaded DBC file"  HorizontalAlignment="Left" VerticalAlignment="Top" Click="btnCompareDBC_Click"  Height="32" Margin="0,0,0,0">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <Image Stretch="Fill" Source="Icon/compareDBC.png" Margin="0,0,0,5" />
                            <Label>Compare DBC</Label>
                        </StackPanel>
                    </Button.Content>
                </Button>

            </ToolBar>
            <ToolBar Band="1" x:Name="toolBarConfig" HorizontalAlignment="Left" VerticalAlignment="Top" Height="40"  >
                <Button x:Name="btnLoadConfig" ToolTip="Load Project Configuration"  HorizontalAlignment="Left" VerticalAlignment="Top"   Height="32" Margin="0,0,0,0" Click="btnLoadConfig_Click">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <Image Stretch="Fill" Source="Icon/loadConfig.png" Margin="0,0,0,5" />
                            <Label>Load Configuration</Label>
                        </StackPanel>
                    </Button.Content>
                </Button>

                <Button x:Name="btnSaveConfig" ToolTip="Save Project Configuration"  HorizontalAlignment="Left" VerticalAlignment="Top"    Height="32" Margin="0,0,0,0" Click="btnSaveConfig_Click">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <Image Stretch="Fill" Source="Icon/saveConfig.png" Margin="0,0,0,5" />
                            <Label>Save Configuration</Label>
                        </StackPanel>
                    </Button.Content>
                </Button>
            </ToolBar>
            <ToolBar Band="1" x:Name="toolBarScript" HorizontalAlignment="Left" VerticalAlignment="Top" Height="40"  >
                <Button x:Name="btnSaveOpState" ToolTip="Save Project OprationState.pm"  HorizontalAlignment="Left" VerticalAlignment="Top"   Height="32" Margin="0,0,0,0" Click="btnSaveOpState_Click">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <Image Stretch="Fill" Source="Icon/genOpState.png" Margin="0,0,0,5" />
                            <Label>Save Operation States</Label>
                        </StackPanel>
                    </Button.Content>
                </Button>

                <Button x:Name="btnSaveTestScript" ToolTip="Save Project Test Script.par"  HorizontalAlignment="Left" VerticalAlignment="Top"   Height="32" Margin="0,0,0,0" Click="btnSaveTestScript_Click">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <Image Stretch="Fill" Source="Icon/genPar.png" Margin="0,0,0,5" RenderTransformOrigin="-1675.66,-86.786" />
                            <Label>Save Pararameters(All)</Label>
                        </StackPanel>
                    </Button.Content>
                </Button>
                <Button x:Name="btnImpQC" ToolTip="Upload all test case to QC.par, you can upload seperately in each expander"  HorizontalAlignment="Left" VerticalAlignment="Top"   Height="32" Margin="0,0,0,0" Click="btnImpQC_Click">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <Image Stretch="Fill" Source="Icon/imp2QC.png" Margin="0,0,0,5" RenderTransformOrigin="-1675.66,-86.786" />
                            <Label>Update Test Case to QC(All)</Label>
                        </StackPanel>
                    </Button.Content>
                </Button>
            </ToolBar>
        </ToolBarTray>
    </Grid>

</Window>
